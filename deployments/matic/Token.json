{
  "address": "0x6481F6B223971c35632D8f90d32c0bDEA5B65e05",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf9b362404094c9c34c1ca6aada2e70ad4caa93f16b9fe865e5f7ef188568c19c",
  "receipt": {
    "to": null,
    "from": "0xc54556c1aC886976C44FF62caE520E5aC6c29E07",
    "contractAddress": "0x6481F6B223971c35632D8f90d32c0bDEA5B65e05",
    "transactionIndex": 17,
    "gasUsed": "381084",
    "logsBloom": "0x
    "blockHash": "0x209863eddb0670c45c48ce1ab4f95fd1d726f221bd117a093ae2d1262f7cbf86",
    "transactionHash": "0xf9b362404094c9c34c1ca6aada2e70ad4caa93f16b9fe865e5f7ef188568c19c",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 29307147,
        "transactionHash": "0xf9b362404094c9c34c1ca6aada2e70ad4caa93f16b9fe865e5f7ef188568c19c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c54556c1ac886976c44ff62cae520e5ac6c29e07",
          "0x000000000000000000000000127685d6dd6683085da4b6a041efcef1681e5c9c"
        ],
        "data": "0x000000000000000000000000000000000000000000000000004a76a9d0574da4000000000000000000000000000000000000000000000000b8c4d2e165a48730000000000000000000000000000000000000000000000e0e96bed3550abb4d43000000000000000000000000000000000000000000000000b87a5c37954d398c000000000000000000000000000000000000000000000e0e970949fedb129ae7",
        "logIndex": 115,
        "blockHash": "0x209863eddb0670c45c48ce1ab4f95fd1d726f221bd117a093ae2d1262f7cbf86"
      }
    ],
    "blockNumber": 29307147,
    "cumulativeGasUsed": "3508575",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x357536f451F7eFAd1aA2cCF53Efe98EfA2b64807"
  ],
  "numDeployments": 1,
  "solcInputHash": "f22c96d486882790cf39475232171949",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Read only function to retrieve the token balance of a given account. The `view` modifier indicates that it doesn't modify the contract's state, which allows us to call it without executing a transaction.\"},\"constructor\":{\"notice\":\"Contract initialization. The `constructor` is executed only once when the contract is created.\"},\"transfer(address,uint256)\":{\"notice\":\"A function to transfer tokens. The `external` modifier makes a function *only* callable from outside the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// The line above is recommended and let you define the license of your contract\\n// Solidity files have to start with this pragma.\\n// It will be used by the Solidity compiler to validate its version.\\npragma solidity ^0.8.6;\\n\\n\\n// This is the main building block for smart contracts.\\ncontract Token {\\n    // Some string type variables to identify the token.\\n    // The `public` modifier makes a variable readable from outside the contract.\\n    string public name = \\\"My Hardhat Token\\\";\\n    string public symbol = \\\"MBT\\\";\\n\\n    // The fixed amount of tokens stored in an unsigned integer type variable.\\n    uint256 public totalSupply = 1000000;\\n\\n    // An address type variable is used to store ethereum accounts.\\n    address public owner;\\n\\n    // A mapping is a key/value map. Here we store each account balance.\\n    mapping(address => uint256) balances;\\n\\n    /**\\n     * Contract initialization.\\n     *\\n     * The `constructor` is executed only once when the contract is created.\\n     */\\n    constructor(address _owner) {\\n        // The totalSupply is assigned to transaction sender, which is the account\\n        // that is deploying the contract.\\n        balances[_owner] = totalSupply;\\n        owner = _owner;\\n    }\\n\\n    /**\\n     * A function to transfer tokens.\\n     *\\n     * The `external` modifier makes a function *only* callable from outside\\n     * the contract.\\n     */\\n    function transfer(address to, uint256 amount) external {\\n        // Check if the transaction sender has enough tokens.\\n        // If `require`'s first argument evaluates to `false` then the\\n        // transaction will revert.\\n        require(balances[msg.sender] >= amount, \\\"Not enough tokens\\\");\\n\\n        // Transfer the amount.\\n        balances[msg.sender] -= amount;\\n        balances[to] += amount;\\n    }\\n\\n    /**\\n     * Read only function to retrieve the token balance of a given account.\\n     *\\n     * The `view` modifier indicates that it doesn't modify the contract's\\n     * state, which allows us to call it without executing a transaction.\\n     */\\n    function balanceOf(address account) external view returns (uint256) {\\n        return balances[account];\\n    }\\n}\\n\",\"keccak256\":\"0x444095bfb6ea49691397dd430248f07dce3356c906fbd7c369f967ac86537c3e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052601060808190526f26bc902430b9323430ba102a37b5b2b760811b60a090815261003191600091906100c7565b506040805180820190915260038082526213509560ea1b602090920191825261005c916001916100c7565b50620f424060025534801561007057600080fd5b506040516105a13803806105a183398101604081905261008f91610160565b6002546001600160a01b03909116600081815260046020526040902091909155600380546001600160a01b03191690911790556101cb565b8280546100d390610190565b90600052602060002090601f0160209004810192826100f5576000855561013b565b82601f1061010e57805160ff191683800117855561013b565b8280016001018555821561013b579182015b8281111561013b578251825591602001919060010190610120565b5061014792915061014b565b5090565b5b80821115610147576000815560010161014c565b60006020828403121561017257600080fd5b81516001600160a01b038116811461018957600080fd5b9392505050565b600181811c908216806101a457607f821691505b602082108114156101c557634e487b7160e01b600052602260045260246000fd5b50919050565b6103c7806101da6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a082311461009c5780638da5cb5b146100c557806395d89b41146100f0578063a9059cbb146100f8575b600080fd5b61006f61010d565b60405161007c9190610254565b60405180910390f35b61008e60025481565b60405190815260200161007c565b61008e6100aa3660046102c5565b6001600160a01b031660009081526004602052604090205490565b6003546100d8906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b61006f61019b565b61010b6101063660046102e7565b6101a8565b005b6000805461011a90610311565b80601f016020809104026020016040519081016040528092919081815260200182805461014690610311565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b505050505081565b6001805461011a90610311565b336000908152600460205260409020548111156101ff5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640160405180910390fd5b336000908152600460205260408120805483929061021e908490610362565b90915550506001600160a01b0382166000908152600460205260408120805483929061024b908490610379565b90915550505050565b600060208083528351808285015260005b8181101561028157858101830151858201604001528201610265565b81811115610293576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146102c057600080fd5b919050565b6000602082840312156102d757600080fd5b6102e0826102a9565b9392505050565b600080604083850312156102fa57600080fd5b610303836102a9565b946020939093013593505050565b600181811c9082168061032557607f821691505b6020821081141561034657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156103745761037461034c565b500390565b6000821982111561038c5761038c61034c565b50019056fea26469706673582212203a17cf881bd9328bce762410bc7d48663d39e7c8058713ef4e8ba34c3a419e2a64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a082311461009c5780638da5cb5b146100c557806395d89b41146100f0578063a9059cbb146100f8575b600080fd5b61006f61010d565b60405161007c9190610254565b60405180910390f35b61008e60025481565b60405190815260200161007c565b61008e6100aa3660046102c5565b6001600160a01b031660009081526004602052604090205490565b6003546100d8906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b61006f61019b565b61010b6101063660046102e7565b6101a8565b005b6000805461011a90610311565b80601f016020809104026020016040519081016040528092919081815260200182805461014690610311565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b505050505081565b6001805461011a90610311565b336000908152600460205260409020548111156101ff5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640160405180910390fd5b336000908152600460205260408120805483929061021e908490610362565b90915550506001600160a01b0382166000908152600460205260408120805483929061024b908490610379565b90915550505050565b600060208083528351808285015260005b8181101561028157858101830151858201604001528201610265565b81811115610293576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146102c057600080fd5b919050565b6000602082840312156102d757600080fd5b6102e0826102a9565b9392505050565b600080604083850312156102fa57600080fd5b610303836102a9565b946020939093013593505050565b600181811c9082168061032557607f821691505b6020821081141561034657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156103745761037461034c565b500390565b6000821982111561038c5761038c61034c565b50019056fea26469706673582212203a17cf881bd9328bce762410bc7d48663d39e7c8058713ef4e8ba34c3a419e2a64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Read only function to retrieve the token balance of a given account. The `view` modifier indicates that it doesn't modify the contract's state, which allows us to call it without executing a transaction."
      },
      "constructor": {
        "notice": "Contract initialization. The `constructor` is executed only once when the contract is created."
      },
      "transfer(address,uint256)": {
        "notice": "A function to transfer tokens. The `external` modifier makes a function *only* callable from outside the contract."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Token.sol:Token",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/Token.sol:Token",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/Token.sol:Token",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12,
        "contract": "contracts/Token.sol:Token",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 16,
        "contract": "contracts/Token.sol:Token",
        "label": "balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}